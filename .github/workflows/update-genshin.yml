name: Update Data from Source

on:
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight UTC

jobs:
  update-data:
    runs-on: ubuntu-latest

    container:
      image: alpine:latest

    steps:
      - name: Setup Dependencies
        run: |
          apk update
          apk add --no-cache git bash coreutils nodejs npm

      - name: Checkout dvalin-data repo
        uses: actions/checkout@v4
        with:
          repository: "dval-in/dvalin-data"
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: "main"
          path: "dvalin-data"

      - name: Read last processed commit
        id: last_commit
        run: |
          echo "LAST_PROCESSED_COMMIT=$(cat dvalin-data/.last_processed_commit)" >> $GITHUB_ENV

      - name: Fetch commit history since last processed
        run: |
          git clone --bare https://github.com/dvaJi/genshin-data.git genshin-data-bare
          cd genshin-data-bare
          # Use git log to fetch commits and process output to a single line
          if [ -z "$LAST_PROCESSED_COMMIT" ]; then
            COMMITS=$(git log --reverse --format='%H' HEAD | tr '\n' ' ')
          else
            COMMITS=$(git log --reverse --format='%H' $LAST_PROCESSED_COMMIT..HEAD | tr '\n' ' ')
          fi
          echo "COMMITS=$COMMITS" >> $GITHUB_ENV
          cd ..
          rm -rf genshin-data-bare

      - name: Get all changed files
        run: |
          set -e  # Ensure the script exits on first error
          git clone https://github.com/dvaJi/genshin-data.git dvalin-data/genshin-data
          cd dvalin-data/genshin-data

          # Check if COMMITS variable is set and not empty
          if [ -z "$COMMITS" ]; then
            echo "No commits found to process."
            exit 0
          fi

          # Convert space-separated COMMITS into an array-like handling 
          set -- $COMMITS
          echo "Found $# commits to process."

          while [ $# -gt 0 ]; do
            COMMIT=$1
            git diff-tree --no-commit-id --name-only -r $COMMIT >> changed_files.txt
            if [ $? -ne 0 ]; then
              echo "Failed to get changes for commit $COMMIT"
              exit 1
            fi
            shift
          done

      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v6
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: "update-${{ github.run_id }}"
      #     title: "Update Data from Source"
      #     body: "This PR is auto-generated by [github actions](https://github.com/features/actions) to update data sourced from genshin-data."
      #     base: "main"
